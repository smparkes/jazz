#!/usr/bin/env ruby

require 'rubygems'
require 'json'
require 'uri'
require 'pathname'

require 'optparse'

require 'optparse'

OptionParser.new do |o|

  o.on("-h[prefix]","--http[prefix]") do |prefix|
    $jazz_http = true
    $jazz_prefix = prefix
  end

  o.on("-b browser","--browser browser") do |browser|
    $jazz_browser = browser
  end

end.parse!

prefix = nil

if $jazz_http
  prefix = $jazz_prefix
  if !prefix
    prefix = "http://localhost:8000/"
  end
else
  prefix = "file://"+Pathname(".").realpath.to_s
  prefix[-1] == "/" or prefix += "/"
end

runner = prefix + "spec/spec_runner.html"

runner = "file://" + File.expand_path( File.join( File.dirname(__FILE__), "..", "lib", "jazz", "spec_runner.html" ) )

files = []
pairs = {}

specs = Dir["spec/**/*[sS]pec.js"]
specs = specs.select do |spec|
  html = spec.dup
  html.sub! %r(^spec/), ""
  html.sub! %r(_?[Ss]pec\.js$), ".html"
  if File.exist? html
    pairs[html] = spec
    files << html
  end
  !File.exist?(html)
end

specs.map! do |spec|
  $jazz_http ? prefix + spec : "file://" + File.expand_path(spec)
end

if false
  files = files.join("?specs=true' '#{prefix}")
  files = "'#{prefix}#{files}?specs=true'" if files
  app = "firefox"
  cmd = "#{app} #{files} '#{runner}?specs=#{URI.escape(specs.to_json)}'"
  puts cmd
  system cmd
else

  files = files.map do |file|
    s = "'#{prefix}#{file}?specs=true'"
    pairs[s] = pairs[file]
    s
  end

  files << "'#{runner}?specs=#{URI.escape(specs.to_json)}'"

  if ARGV.length > 0
    files = files.select do |file|
      matched = false
      ARGV.each do |arg|
        if file.index arg or ( pairs[file] and pairs[file].index arg )
          matched = true
        end
      end
      matched
    end
  end

  for file in files do
    app = "firefox"
    cmd = "#{app} #{file}"
    puts cmd
    system cmd
  end

end
